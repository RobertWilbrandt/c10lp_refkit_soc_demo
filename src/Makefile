# Build the application
#
# This file needs to get called recursively, as it includes files generated by
# the gateware build process.

LN?=ln

# Include gateware-generated make file segments (- as we could not have these e.g. when cleaning)
-include $(BUILD_DIR)/c10lprefkit/software/include/generated/variables.mak
-include $(SOC_DIRECTORY)/software/common.mak

BUILD_APP_DIR=$(BUILD_DIR)/application

OBJECTS=$(BUILD_APP_DIR)/main.o

# Nice user-usable rules
all: application
application: $(BUILD_APP_DIR)/application.bin

# Cleaning rules
clean: clean-application
clean-application:
	$(RM) -r $(BUILD_APP_DIR)

# Build application binary
%.bin: %.elf
	$(OBJCOPY) -O binary $< $@

$(BUILD_APP_DIR)/application.elf: $(BUILD_APP_DIR)/linker.ld $(OBJECTS)
	$(LD) $(LDFLAGS) \
	  	-T $< \
		-N -o $@ \
		$(BUILD_SOC_DIR)/software/libbase/crt0.o \
		$(OBJECTS) \
		-L$(BUILD_SOC_DIR)/software/libbase \
		-L$(BUILD_SOC_DIR)/software/libcompiler_rt \
		-lbase-nofloat -lcompiler_rt

$(BUILD_APP_DIR)/linker.ld: $(CURDIR)/linker.ld $(BUILD_APP_DIR)
	if [ ! -e $@ ]; then  $(LN) -s $< $@; fi;

$(BUILD_APP_DIR)/%.o: %.c $(BUILD_APP_DIR) # Compilation depends on gateware-generated files
	$(compile)

# Create needed directories
$(BUILD_APP_DIR):
	mkdir -p $@

.PHONY: all application clean clean-application
